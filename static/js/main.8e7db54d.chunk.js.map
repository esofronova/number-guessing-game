{"version":3,"sources":["app.js","index.js"],"names":["GuessNumber","useState","Math","floor","random","randomNumber","previousGusses","setPreviousGuesses","guess","setGuess","remaining","setRemaining","text","setText","gameOver","setGameOver","className","type","onChange","e","target","value","disabled","onClick","isNaN","Number","alert","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAEe,SAASA,IAEtB,MAAqBC,mBAASC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GAA3DC,EAAL,oBACA,EAA2CJ,mBAAS,IAApD,mBAAKK,EAAL,KAAqBC,EAArB,KACA,EAAwBN,mBAAS,IAAjC,mBAAKO,EAAL,KAAYC,EAAZ,KACA,EAAgCR,mBAAS,IAAzC,mBAAKS,EAAL,KAAgBC,EAAhB,KACA,EAAsBV,mBAAS,IAA/B,mBAAKW,EAAL,KAAWC,EAAX,KACA,EAA8BZ,oBAAS,GAAvC,mBAAKa,EAAL,KAAeC,EAAf,KAEA,OACE,sBAAKC,UAAU,oBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,oBAAIA,UAAU,gDAAd,kCACA,qBAAIA,UAAU,OAAd,mDAA2D,kCAA3D,QAAwE,oCAAxE,OACA,oFAEF,sBAAKA,UAAU,uCAAf,UACE,oBAAIA,UAAU,GAAd,4BACA,8BACE,uBACEC,KAAK,OACLD,UAAU,kCACVE,SAAU,SAAAC,GAAOV,EAASU,EAAEC,OAAOC,QACnCA,MAAOb,EACPc,WAAUR,MAGd,wBACEE,UAAU,yCACVO,QAAS,WACHb,EAAY,KACO,IAAjBc,MAAMhB,IAA8B,KAAVA,EACxBiB,OAAOjB,KAAWH,GACpBQ,EAAQ,6BACRE,GAAY,IACHU,OAAOjB,GAASH,GACzBQ,EAAQ,uBACRF,IAAeD,GACfH,EAAmBD,GAAkB,IAAME,IAClCiB,OAAOjB,GAASH,IACzBQ,EAAQ,wBACRF,IAAeD,GACfH,EAAmBD,GAAkB,IAAME,IAG7CkB,MAAM,iCAIQ,IAAdhB,IACFK,GAAY,GACZF,EAAQ,yBAA2BR,IAGrCI,EAAS,KAEXa,WAAUR,EA7BZ,0BA+BA,qBAAIE,UAAU,OAAd,+BAAwCV,KACxC,qDAAwBI,KACxB,oBAAIM,UAAW,sDAAiE,KAATJ,EAAc,GAAK,WAA1F,SAAuGA,IACvG,wBACEI,UAAW,2CAA6CF,EAAW,GAAK,WACxES,QAAS,WAAQI,OAAOC,SAASC,UAFnC,kCCzDRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8e7db54d.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function GuessNumber() {\r\n\r\n  let [randomNumber] = useState(Math.floor(Math.random() * 100) + 1);\r\n  let [previousGusses, setPreviousGuesses] = useState('');\r\n  let [guess, setGuess] = useState('');\r\n  let [remaining, setRemaining] = useState(10);\r\n  let [text, setText] = useState('');\r\n  let [gameOver, setGameOver] = useState(false);\r\n\r\n  return (\r\n    <div className=\"guess-number py-4\">\r\n      <div className=\"header\">\r\n        <h1 className=\"bg-success bg-gradient text-white fw-bold p-2\">Number Guessing Game</h1>\r\n        <h5 className=\"mb-3\">Try and guess a random number between <b>1</b> and <b>100</b>.</h5>\r\n        <h5>You have 10 attempts to guess the right number.</h5>\r\n      </div>\r\n      <div className=\"bg-info bg-gradient text-center py-4\">\r\n        <h2 className=\"\">Guess a Number</h2>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"p-2 mt-3 text-center fs-3 guess\"\r\n            onChange={e => { setGuess(e.target.value) }}\r\n            value={guess}\r\n            disabled={gameOver ? true : false}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"btn btn-warning fs-3 rounded-pill my-4\"\r\n          onClick={() => {\r\n            if (remaining > 0) {\r\n              if (isNaN(guess) === false && guess !== '') {\r\n                if (Number(guess) === randomNumber) {\r\n                  setText('Congratulations! You won!');\r\n                  setGameOver(true);\r\n                } else if (Number(guess) < randomNumber) {\r\n                  setText('Too low! Try again!');\r\n                  setRemaining(--remaining);\r\n                  setPreviousGuesses(previousGusses += ' ' + guess);\r\n                } else if (Number(guess) > randomNumber) {\r\n                  setText('Too high! Try again!');\r\n                  setRemaining(--remaining);\r\n                  setPreviousGuesses(previousGusses += ' ' + guess);\r\n                };\r\n              } else {\r\n                alert('Please enter a valid number!');\r\n              };\r\n            };\r\n\r\n            if (remaining === 0) {\r\n              setGameOver(true);\r\n              setText('Game over! Number was ' + randomNumber);\r\n            };\r\n\r\n            setGuess('');\r\n          }}\r\n          disabled={gameOver ? true : false}\r\n        >Submit guess</button>\r\n        <h5 className=\"mb-3\">Previous Guesses: {previousGusses}</h5>\r\n        <h5>Guesses Remaining: {remaining}</h5>\r\n        <h3 className={\"bg-success bg-gradient p-2 text-white fw-bold my-3\" + (text !== '' ? '' : ' d-none')}>{text}</h3>\r\n        <button\r\n          className={\"btn btn-success fs-3 my-2 fw-bold w-100\" + (gameOver ? '' : ' d-none')}\r\n          onClick={() => { window.location.reload() }}\r\n        >Start New Game</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './custom-classes.scss';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}